type GeoPoint {
  type: Point!
  coordinates: [Float]!
}

enum Point {
  Point
}

type Species {
  id: ID!
  species_name: String!
  category: Category!
  image: String!
  location: GeoPoint!
  owner: User!
}

type Query {
  species: [Species]
}

input InputSpecies {
  species_name: String!
  category: ID!
  image: String!
  location: InputGeoPoint!
}

input InputGeoPoint {
  type: Point!
  coordinates: [Float]!
}

input UpdateSpecies {
  species_name: String
  category: ID
  image: String
  location: InputGeoPoint
}

type Mutation {
  """
  Token is required to access this mutation
  """
  addSpecies(input: InputSpecies): Species

  """
  Token is required to access this mutation
  """
  deleteSpecies(id: ID!): Species

  """
  Token is required to access this mutation
  """
  updateSpecies(id: ID!, input: UpdateSpecies!): Species
}
